/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var PropTypes = require('prop-types');
var React = require('react');
var cx = require('classnames');
var usePrefix = require('../../internal/usePrefix.js');
var iconsReact = require('@carbon/icons-react');

var _CircleDash, _Step, _Step2, _Step3, _Step4;
function Step() {
  const prefix = usePrefix.usePrefix();
  return /*#__PURE__*/React.createElement("li", {
    className: `${prefix}--progress-step ${prefix}--progress-step--incomplete`
  }, /*#__PURE__*/React.createElement("div", {
    className: `${prefix}--progress-step-button ${prefix}--progress-step-button--unclickable`
  }, _CircleDash || (_CircleDash = /*#__PURE__*/React.createElement(iconsReact.CircleDash, null)), /*#__PURE__*/React.createElement("p", {
    className: `${prefix}--progress-label`
  }), /*#__PURE__*/React.createElement("span", {
    className: `${prefix}--progress-line`
  })));
}
function ProgressIndicatorSkeleton({
  className,
  vertical,
  ...rest
}) {
  const prefix = usePrefix.usePrefix();
  return /*#__PURE__*/React.createElement("ul", _rollupPluginBabelHelpers.extends({
    className: cx(`${prefix}--progress`, `${prefix}--skeleton`, {
      [`${prefix}--progress--vertical`]: vertical
    }, className)
  }, rest), _Step || (_Step = /*#__PURE__*/React.createElement(Step, null)), _Step2 || (_Step2 = /*#__PURE__*/React.createElement(Step, null)), _Step3 || (_Step3 = /*#__PURE__*/React.createElement(Step, null)), _Step4 || (_Step4 = /*#__PURE__*/React.createElement(Step, null)));
}
ProgressIndicatorSkeleton.propTypes = {
  /**
   * Specify an optional className to add.
   */
  className: PropTypes.string,
  /**
   * Determines whether or not the ProgressIndicator should be rendered vertically.
   */
  vertical: PropTypes.bool
};

exports.ProgressIndicatorSkeleton = ProgressIndicatorSkeleton;
exports.default = ProgressIndicatorSkeleton;
