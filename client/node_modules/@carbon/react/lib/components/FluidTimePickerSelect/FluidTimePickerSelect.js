/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var React = require('react');
var PropTypes = require('prop-types');
var FluidSelect = require('../FluidSelect/FluidSelect.js');
require('../FluidSelect/FluidSelect.Skeleton.js');

const FluidTimePickerSelect = /*#__PURE__*/React.forwardRef(function FluidTimePickerSelect({
  children,
  className,
  ...other
}, ref) {
  return /*#__PURE__*/React.createElement(FluidSelect.default, _rollupPluginBabelHelpers.extends({
    className: className,
    ref: ref
  }, other), children);
});
FluidTimePickerSelect.propTypes = {
  /**
   * Provide the contents of your Select
   */
  children: PropTypes.node,
  /**
   * Specify an optional className to be applied to the node containing the label and the select box
   */
  className: PropTypes.string,
  /**
   * Optionally provide the default value of the `<select>`
   */
  defaultValue: PropTypes.any,
  /**
   * Specify whether the control is disabled
   */
  disabled: PropTypes.bool,
  /**
   * Specify a custom `id` for the `<select>`
   */
  id: PropTypes.string.isRequired,
  /**
   * Provide label text to be read by screen readers when interacting with the
   * control
   */
  labelText: PropTypes.node,
  /**
   * Provide an optional `onChange` hook that is called each time the value of
   * the underlying `<input>` changes
   */
  onChange: PropTypes.func
};

exports.default = FluidTimePickerSelect;
