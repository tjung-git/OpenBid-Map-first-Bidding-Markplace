export default Pagination;
declare function Pagination({ backwardText, children, className, disabled, forwardText, id, initialPage, itemsPerPageText, itemRangeText, itemText, onChange, pageRangeText, pageSize, pageSizes, pageText, pagesUnknown, totalItems, ...other }: {
    [x: string]: any;
    backwardText?: string | undefined;
    children?: undefined;
    className?: null | undefined;
    disabled?: boolean | undefined;
    forwardText?: string | undefined;
    id?: number | undefined;
    initialPage?: number | undefined;
    itemsPerPageText?: string | undefined;
    itemRangeText?: ((min: any, max: any, total: any) => string) | undefined;
    itemText?: ((min: any, max: any) => string) | undefined;
    onChange: any;
    pageRangeText?: ((current: any, total: any) => string) | undefined;
    pageSize?: number | undefined;
    pageSizes?: undefined;
    pageText?: ((page: any) => string) | undefined;
    pagesUnknown?: boolean | undefined;
    totalItems?: undefined;
}): import("react/jsx-runtime").JSX.Element;
declare namespace Pagination {
    namespace propTypes {
        let backwardText: PropTypes.Requireable<string>;
        let children: PropTypes.Requireable<NonNullable<PropTypes.ReactNodeLike | ((...args: any[]) => any)>>;
        let className: PropTypes.Requireable<string>;
        let disabled: PropTypes.Requireable<boolean>;
        let forwardText: PropTypes.Requireable<string>;
        let id: PropTypes.Requireable<NonNullable<string | number | null | undefined>>;
        let initialPage: PropTypes.Requireable<number>;
        let itemRangeText: PropTypes.Requireable<(...args: any[]) => any>;
        let itemText: PropTypes.Requireable<(...args: any[]) => any>;
        let itemsPerPageText: PropTypes.Requireable<string>;
        let onChange: PropTypes.Requireable<(...args: any[]) => any>;
        let pageRangeText: PropTypes.Requireable<(...args: any[]) => any>;
        let pageSize: PropTypes.Requireable<number>;
        let pageSizes: PropTypes.Requireable<(number | null | undefined)[]>;
        let pageText: PropTypes.Requireable<(...args: any[]) => any>;
        let pagesUnknown: PropTypes.Requireable<boolean>;
        let totalItems: PropTypes.Requireable<number>;
    }
}
import PropTypes from 'prop-types';
