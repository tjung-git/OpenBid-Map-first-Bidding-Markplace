/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var cx = require('classnames');
var PropTypes = require('prop-types');
var React = require('react');
var SideNavIcon = require('./SideNavIcon.js');
var usePrefix = require('../../internal/usePrefix.js');

const SideNavHeader = ({
  children,
  className: customClassName,
  renderIcon: IconElement
}) => {
  const prefix = usePrefix.usePrefix();
  const className = cx(`${prefix}--side-nav__header`, customClassName);
  return /*#__PURE__*/React.createElement("header", {
    className: className
  }, /*#__PURE__*/React.createElement(SideNavIcon.default, null, /*#__PURE__*/React.createElement(IconElement, null)), children);
};
SideNavHeader.displayName = 'SideNavHeader';
SideNavHeader.propTypes = {
  /**
   * The child nodes to be rendered
   */
  children: PropTypes.node,
  /**
   * Provide an optional class to be applied to the containing node
   */
  className: PropTypes.string,
  /**
   * Property to indicate if the side nav container is open (or not). Use to
   * keep local state and styling in step with the SideNav expansion state.
   */
  isSideNavExpanded: PropTypes.bool,
  /**
   * A component used to render an icon.
   */
  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired
};

exports.default = SideNavHeader;
