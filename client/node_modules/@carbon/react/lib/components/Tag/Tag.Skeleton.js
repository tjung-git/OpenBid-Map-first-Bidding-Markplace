/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var PropTypes = require('prop-types');
var React = require('react');
var cx = require('classnames');
var usePrefix = require('../../internal/usePrefix.js');

function TagSkeleton({
  className,
  size,
  ...rest
}) {
  const prefix = usePrefix.usePrefix();
  const tagClasses = cx(`${prefix}--tag`, `${prefix}--skeleton`, className, {
    [`${prefix}--tag--${size}`]: size,
    // TODO: V12 - Remove this class
    [`${prefix}--layout--size-${size}`]: size
  });
  return /*#__PURE__*/React.createElement("span", _rollupPluginBabelHelpers.extends({
    className: tagClasses
  }, rest));
}
TagSkeleton.propTypes = {
  /**
   * Specify an optional className to add.
   */
  className: PropTypes.string,
  /**
   * Specify the size of the Tag. Currently supports either `sm` or
   * default sizes.
   */
  size: PropTypes.oneOf(['sm'])
};

exports.TagSkeleton = TagSkeleton;
exports.default = TagSkeleton;
