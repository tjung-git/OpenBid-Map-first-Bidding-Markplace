/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var PropTypes = require('prop-types');
var React = require('react');
var cx = require('classnames');
var usePrefix = require('../../internal/usePrefix.js');

const BadgeIndicator = /*#__PURE__*/React.forwardRef(function BadgeIndicatorContent({
  className: customClassName,
  count,
  ...rest
}, ref) {
  const prefix = usePrefix.usePrefix();
  const classNames = cx(`${prefix}--badge-indicator`, customClassName, {
    [`${prefix}--badge-indicator--count`]: count
  });
  const displayCount = count && count > 999 ? '999+' : count;
  return /*#__PURE__*/React.createElement("div", _rollupPluginBabelHelpers.extends({
    className: classNames,
    ref: ref
  }, rest), displayCount);
});
BadgeIndicator.propTypes = {
  /**
   * Specify an optional className to add.
   */
  className: PropTypes.string,
  /**
   * Count of badge indicator
   */
  count: PropTypes.number,
  /**
   * Provide an `id` to uniquely identify the BadgeIndidcator
   */
  id: PropTypes.string
};

exports.BadgeIndicator = BadgeIndicator;
exports.default = BadgeIndicator;
