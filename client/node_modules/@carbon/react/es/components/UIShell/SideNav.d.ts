/**
 * Copyright IBM Corp. 2016, 2025
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import React, { type FocusEvent, type KeyboardEvent, type MouseEventHandler } from 'react';
export interface SideNavProps {
    expanded?: boolean | undefined;
    defaultExpanded?: boolean | undefined;
    isChildOfHeader?: boolean | undefined;
    onToggle?: (event: FocusEvent<HTMLElement> | KeyboardEvent<HTMLElement> | boolean, value: boolean) => void | undefined;
    href?: string | undefined;
    isFixedNav?: boolean | undefined;
    isRail?: boolean | undefined;
    isPersistent?: boolean | undefined;
    addFocusListeners?: boolean | undefined;
    addMouseListeners?: boolean | undefined;
    onOverlayClick?: MouseEventHandler<HTMLDivElement> | undefined;
    onSideNavBlur?: () => void | undefined;
    enterDelayMs?: number;
    inert?: boolean;
}
interface SideNavContextData {
    isRail?: boolean | undefined;
}
export declare const SideNavContext: React.Context<SideNavContextData>;
declare const SideNav: React.ForwardRefExoticComponent<Omit<SideNavProps & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>, "ref"> & React.RefAttributes<HTMLElement>>;
export default SideNav;
