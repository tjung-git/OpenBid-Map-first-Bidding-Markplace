/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import PropTypes from 'prop-types';
import { HTMLAttributes } from 'react';
export interface SliderSkeletonProps extends HTMLAttributes<HTMLDivElement> {
    /**
     * The `ariaLabel` for the handle icon.
     */
    ariaLabel?: string;
    /**
     * The `ariaLabel` for the upper bound slider handle when there are two handles.
     */
    unstable_ariaLabelHandleUpper?: string;
    /**
     * Specify an optional className to add to the form item wrapper.
     */
    className?: string;
    /**
     * Specify whether the label should be hidden, or not
     */
    hideLabel?: boolean;
    /**
     * Turn the slider into a range slider.
     */
    twoHandles?: boolean;
}
declare const SliderSkeleton: {
    ({ ariaLabel, unstable_ariaLabelHandleUpper: ariaLabelHandleUpper, hideLabel, className, twoHandles, ...rest }: SliderSkeletonProps): import("react/jsx-runtime").JSX.Element;
    propTypes: {
        /**
         * The `ariaLabel` for the handle icon.
         */
        ariaLabel: PropTypes.Requireable<string>;
        /**
         * The `ariaLabel` for the upper bound slider handle when there are two handles.
         */
        unstable_ariaLabelHandleUpper: PropTypes.Requireable<string>;
        /**
         * Specify an optional className to add to the form item wrapper.
         */
        className: PropTypes.Requireable<string>;
        /**
         * Specify whether the label should be hidden, or not
         */
        hideLabel: PropTypes.Requireable<boolean>;
        /**
         * Turn the slider into a range slider.
         */
        twoHandles: PropTypes.Requireable<boolean>;
    };
};
export default SliderSkeleton;
export { SliderSkeleton };
